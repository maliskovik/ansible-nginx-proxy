# WARNING: THIS FILE WAS GENERATED WITH ANSIBLE.
# ANY CHANGES TO THIS FILE WILL BE LOST!

{# MAIN UPSTREAM #}
{% if item.targets is defined %}
upstream {{ item.name }}-http-pass {
{% for target in item.targets|default(omit) %}
    server {{ target.address }}:{{ target.http_port|default(nginx_proxy_defaults.http_port|default(80)) }};
{% endfor %}
}

upstream {{ item.name }}-https-pass {
{% for target in item.targets|default(omit) %}
    server {{ target.address }}:{{ target.https_port|default(nginx_proxy_defaults.https_port|default(443)) }};
{% endfor %}
}

{% endif %}
{% if item.target is defined %}
upstream {{ item.name }}-http-pass {
    server {{ item.target.address }}:{{ item.target.http_port|default(nginx_proxy_defaults.http_port|default(80)) }};
    }

upstream {{ item.name }}-https-pass {
    server {{ item.target.address }}:{{ item.target.https_port|default(nginx_proxy_defaults.https_port|default(443)) }};
}

{% endif %}
{# LOCATION UPSTREAMS #}
{% if item.locations is defined %}
{% for location in item.locations|default(omit) %}
{% if location.targets is defined %}
upstream {{ item.name }}-{{ location.name }}-http-pass {
{% for target in location.targets|default(omit) %}
    server  {{ target.address }}:{{ target.http_port|default(nginx_proxy_defaults.http_port|default(80)) }};
{% endfor %}
}

upstream {{ item.name }}-{{ location.name }}-https-pass {
{% for target in location.targets|default(omit) %}
    server  {{ target.address }}:{{ target.https_port|default(nginx_proxy_defaults.https_port|default(443)) }};
{% endfor %}
}

{% endif %}
{% if location.target is defined %}
upstream {{ item.name }}-{{ location.name }}-http-pass {
    server  {{ location.target.address }}:{{ location.target.http_port|default(nginx_proxy_defaults.http_port|default(80)) }};
}

upstream {{ item.name }}-{{ location.name }}-https-pass {
    server  {{ location.target.address }}:{{ location.target.https_port|default(nginx_proxy_defaults.https_port|default(443)) }};
}

{% endif %}
{% endfor %}
{% endif %}
{# MAIN SERVER DEFINITION #}
server {
    server_name             {{ item.domain }};
    listen                  443 ssl http2;
{% if item.cert is defined and item.cert_key is defined %}
    ssl_certificate         {{ item.cert|default(nginx_proxy_defaults.cert) }};
    ssl_certificate_key     {{ item.cert_key|default(nginx_proxy_defaults.cert_key) }};
{% elif (item.letsencrypt is not defined and nginx_proxy_defaults.letsencrypt) or (item.letsencrypt is defined and item.letsencrypt|default(false))  %}
    ssl_certificate         /etc/letsencrypt/live/{{ item.domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ item.domain }}/privkey.pem;
{% else %}
    ssl_certificate         {{ nginx_proxy_defaults.cert }};
    ssl_certificate_key     {{ nginx_proxy_defaults.cert_key }};
{% endif %}
    access_log              /var/log/nginx/{{ item.name }}-access.log;
    error_log               /var/log/nginx/{{ item.name }}-error.log;
    access_log              syslog:server=unix:/dev/log,facility=local7,tag=nginx_{{ item.name }};
    error_log               syslog:server=unix:/dev/log,facility=local7,tag=nginx_{{ item.name }};

{# INCLUDES #}
{% for include in item.server_includes|default(nginx_proxy_default_includes) %}
    include conf.d/{{ include }};
{% endfor %}

{# ACCESS RESTRICTION #}
{% if item.restricted|default(nginx_proxy_defaults.restricted|default(false)) %}
    # Access restriction
{% for permitted_address in item.permitted_addresses|default(nginx_proxy_defaults.permitted_addresses|default(omit)) %}
    allow {{ permitted_address }};
{% endfor %}

{% if item.permitted_addresses_extra is defined %}
{% for permitted_address in item.permitted_addresses_extra|default(omit) %}
    allow {{ permitted_address }};
{% endfor %}
{% endif%}
    deny all;

{% endif %}
{% if item.basic_auth | default(nginx_proxy_defaults.basic_auth) %}
    auth_basic              "closed website";
    auth_basic_user_file    {{ nginx_proxy_basic_auth_dir }}/{{ item.name}};
    satisfy                 any;
    deny                    all;
{% endif %}
{# NAMED LOCATION #}
    location @remote_pass {
{% if item.location_includes is defined %}
{% for include in item.location_includes|default(omit) %}
        include                 conf.d/{{ include }};
{% endfor %}
{% endif %}
{% if (item.targets is defined or item.target is defined) %}
        proxy_pass              {{ item.scheme|default(nginx_proxy_defaults.scheme) }}://{{ item.name }}-{{ item.scheme|default(nginx_proxy_defaults.scheme) }}-pass;
        proxy_set_header        X-Forwarded-Proto {{ item.scheme|default(nginx_proxy_defaults.scheme)|default("$scheme") }};
        include                 fastcgi_params;
{% if item.reverse|default(false) %}
        proxy_redirect          {{ item.scheme|default(nginx_proxy_defaults.scheme) }}://{{ item.reverse_name|default(item.target) }} https://{{ item.domain }};
        proxy_set_header        host {{ item.reverse_name|default(item.domain) }};
{% elif item.scheme|default(nginx_proxy_defaults.scheme) == "http" %}
        proxy_redirect          https:// http://;
{% endif %}
        include                 conf.d/proxy_settings.inc;
{% endif %}
    }
{# DEFAULT LOCATION #}
    location / {
{% if item.location_includes is defined %}
{% for include in item.location_includes|default(omit) %}
        include                 conf.d/{{ include }};
{% endfor %}
{% endif %}
{# TARGET #}
{% if (item.target|default(false) or item.targets|default(false)) %}
        try_files @remote_pass @remote_pass;
{% endif %}
{% if item.redirect|default(false) %}
        return 302 {{ item.redirect }};
{% endif %}
{% if item.rewrite|default(false) %}
        rewrite {{ item.rewrite.base }} {{ item.rewrite.destination }} break;
{% endif %}
    }
{# LOCATIONS #}
{% if item.locations is defined %}
{% for location in item.locations|default(omit) %}
    location {{ location.url }} {
{% if location.unrestricted|default(false) %}
        allow all;
{% endif%}
{% if location.includes is defined %}
{% for include in location.includes|default(omit) %}
        include conf.d/{{ include }};
{% endfor %}
{% endif %}
{% if location.targets is defined or location.target is defined %}
        proxy_pass              {{ location.scheme|default(item.scheme)|default(nginx_proxy_defaults.scheme) }}://{{ item.name }}-{{ location.name }}-{{ location.scheme|default(item.scheme)|default(nginx_proxy_defaults.scheme)|default("$scheme") }}-pass;
        proxy_set_header        X-Forwarded-Proto {{ location.scheme|default(item.scheme)|default(nginx_proxy_defaults.scheme)|default("$scheme") }};
        include                 conf.d/proxy_settings.inc;
{% if item.reverse|default(false) %}
        proxy_redirect          {{ location.scheme|default(item.scheme)|default(nginx_proxy_defaults.scheme) }}://{{ location.reverse_name|default(item.reverse_name|default(location.target.address)) }} https://{{ item.domain }};
        proxy_set_header        host {{ item.reverse_name|default(item.target) }};
{% elif item.scheme|default(nginx_proxy_defaults.scheme) == "http" %}
        proxy_redirect          https:// http://;
{% endif %}
{% elif location.redirect is defined %}
        return 302 {{ location.redirect }};
{% elif location.rewrite is defined %}
        rewrite {{ location.rewrite.base }} {{ location.rewrite.destination }} break;
{% else %}
        try_files @remote_pass @remote_pass;
{% endif %}
    }

{% endfor %}
{% endif %}
}

server {
    server_name             *.{{ item.domain }} {% if item.aliases is defined %}{% for alias in item.aliases %}{{ alias }} {% endfor %}{% endif %} ;
    listen                  443 ssl http2;
{% if item.cert is defined and item.cert_key is defined %}
        ssl_certificate         {{ item.cert|default(nginx_proxy_defaults.cert) }};
        ssl_certificate_key     {{ item.cert_key|default(nginx_proxy_defaults.cert_key) }};
{% elif (item.letsencrypt is not defined and nginx_proxy_defaults.letsencrypt) or (item.letsencrypt is defined and item.letsencrypt|default(false))  %}
        ssl_certificate         /etc/letsencrypt/live/{{ item.domain }}/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/{{ item.domain }}/privkey.pem;
{% else %}
        ssl_certificate         {{ nginx_proxy_defaults.cert }};
        ssl_certificate_key     {{ nginx_proxy_defaults.cert_key }};
{% endif %}
    return                  301 https://{{ item.domain }}$request_uri;
}

server {
    server_name             .{{ item.domain }} {% if item.aliases is defined %}{% for alias in item.aliases %}.{{ alias }} {% endfor %}{% endif %} ;
    listen                  80;
    location / {
      return                301 https://{{ item.domain }}$request_uri;
    }
{# LETSENCRYPT #}
{% if (item.letsencrypt is not defined and nginx_proxy_defaults.letsencrypt) or (item.letsencrypt is defined and item.letsencrypt|default(false))  %}
    location ^~ /.well-known/ {
        allow       all;
        root        /opt/letsencrypt/challenge;
{% if (item.target is defined or item.targets is defined) %}
        error_page   404 = @{{ item.name }};
{% endif %}
        access_log  /var/log/nginx/{{ item.name }}-le-access.log;
        error_log   /var/log/nginx/{{ item.name }}-le-error.log;
    }
{% endif %}

{# LOCATION #}
{% if (item.target is defined or item.targets is defined) %}
    location @{{ item.name }} {
        proxy_pass              http://{{ item.name }}-http-pass;
        proxy_set_header        X-Forwarded-Proto http;
        include                 conf.d/proxy_settings.inc;
    }
{% endif %}
{% if item.http_locations is defined %}
{% for location in item.http_locations %}
    location ~ /{{ location }} {
{% if item.target is defined or item.targets is defined %}
        error_page   404 = @{{ item.name }};
{% endif %}
        access_log  /var/log/nginx/{{ item.name }}-le-access.log;
        error_log   /var/log/nginx/{{ item.name }}-le-error.log;
    }

{% endfor %}
{% endif %}

}
